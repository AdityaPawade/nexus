// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nexus.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReplicateResponse struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicateResponse) Reset()         { *m = ReplicateResponse{} }
func (m *ReplicateResponse) String() string { return proto.CompactTextString(m) }
func (*ReplicateResponse) ProtoMessage()    {}
func (*ReplicateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6bc6d570457f57a9, []int{0}
}

func (m *ReplicateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicateResponse.Unmarshal(m, b)
}
func (m *ReplicateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicateResponse.Marshal(b, m, deterministic)
}
func (m *ReplicateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicateResponse.Merge(m, src)
}
func (m *ReplicateResponse) XXX_Size() int {
	return xxx_messageInfo_ReplicateResponse.Size(m)
}
func (m *ReplicateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicateResponse proto.InternalMessageInfo

func (m *ReplicateResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReplicateResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReplicateRequest struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicateRequest) Reset()         { *m = ReplicateRequest{} }
func (m *ReplicateRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicateRequest) ProtoMessage()    {}
func (*ReplicateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6bc6d570457f57a9, []int{1}
}

func (m *ReplicateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicateRequest.Unmarshal(m, b)
}
func (m *ReplicateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicateRequest.Marshal(b, m, deterministic)
}
func (m *ReplicateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicateRequest.Merge(m, src)
}
func (m *ReplicateRequest) XXX_Size() int {
	return xxx_messageInfo_ReplicateRequest.Size(m)
}
func (m *ReplicateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicateRequest proto.InternalMessageInfo

func (m *ReplicateRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*ReplicateResponse)(nil), "nexus.api.ReplicateResponse")
	proto.RegisterType((*ReplicateRequest)(nil), "nexus.api.ReplicateRequest")
}

func init() { proto.RegisterFile("nexus.proto", fileDescriptor_6bc6d570457f57a9) }

var fileDescriptor_6bc6d570457f57a9 = []byte{
	// 165 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0x4b, 0xad, 0x28,
	0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x70, 0x12, 0x0b, 0x32, 0x95, 0x1c,
	0xb9, 0x04, 0x83, 0x52, 0x0b, 0x72, 0x32, 0x93, 0x13, 0x4b, 0x52, 0x83, 0x52, 0x8b, 0x0b, 0xf2,
	0xf3, 0x8a, 0x53, 0x85, 0x84, 0xb8, 0x58, 0x92, 0xf3, 0x53, 0x52, 0x25, 0x18, 0x15, 0x18, 0x35,
	0x58, 0x83, 0xc0, 0x6c, 0x21, 0x09, 0x2e, 0xf6, 0xdc, 0xd4, 0xe2, 0xe2, 0xc4, 0xf4, 0x54, 0x09,
	0x26, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x18, 0x57, 0x49, 0x8d, 0x4b, 0x00, 0xc9, 0x88, 0xc2, 0xd2,
	0xd4, 0xe2, 0x12, 0x90, 0x09, 0x29, 0x89, 0x25, 0x89, 0x60, 0x13, 0x78, 0x82, 0xc0, 0x6c, 0x23,
	0x7f, 0x2e, 0x56, 0x3f, 0x90, 0xbd, 0x42, 0x6e, 0x5c, 0x9c, 0x70, 0x0d, 0x42, 0xd2, 0x7a, 0x70,
	0xc7, 0xe8, 0xa1, 0x1b, 0x23, 0x25, 0x83, 0x5d, 0x12, 0xe2, 0x4c, 0x27, 0xd6, 0x28, 0xe6, 0xc4,
	0x82, 0xcc, 0x24, 0x36, 0xb0, 0xa7, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x34, 0xcc, 0xf4,
	0xfd, 0xe3, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NexusClient is the client API for Nexus service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NexusClient interface {
	Replicate(ctx context.Context, in *ReplicateRequest, opts ...grpc.CallOption) (*ReplicateResponse, error)
}

type nexusClient struct {
	cc *grpc.ClientConn
}

func NewNexusClient(cc *grpc.ClientConn) NexusClient {
	return &nexusClient{cc}
}

func (c *nexusClient) Replicate(ctx context.Context, in *ReplicateRequest, opts ...grpc.CallOption) (*ReplicateResponse, error) {
	out := new(ReplicateResponse)
	err := c.cc.Invoke(ctx, "/nexus.api.Nexus/Replicate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NexusServer is the server API for Nexus service.
type NexusServer interface {
	Replicate(context.Context, *ReplicateRequest) (*ReplicateResponse, error)
}

// UnimplementedNexusServer can be embedded to have forward compatible implementations.
type UnimplementedNexusServer struct {
}

func (*UnimplementedNexusServer) Replicate(ctx context.Context, req *ReplicateRequest) (*ReplicateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Replicate not implemented")
}

func RegisterNexusServer(s *grpc.Server, srv NexusServer) {
	s.RegisterService(&_Nexus_serviceDesc, srv)
}

func _Nexus_Replicate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NexusServer).Replicate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nexus.api.Nexus/Replicate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NexusServer).Replicate(ctx, req.(*ReplicateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Nexus_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nexus.api.Nexus",
	HandlerType: (*NexusServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Replicate",
			Handler:    _Nexus_Replicate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nexus.proto",
}
